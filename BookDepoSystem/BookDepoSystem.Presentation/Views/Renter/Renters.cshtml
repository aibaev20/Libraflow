@model PaginationViewModel<BookDepoSystem.Data.Models.Renter>

@{
    ViewData["Title"] = @T.RenterTableTitle;
}

<h2 class="m-3">@T.RenterTableTitle</h2>

<div class="d-flex justify-content-end align-items-center m-3">
    
    <form method="get" class="d-flex align-items-center">
        <input type="text" name="search" class="form-control" placeholder="..." value="@ViewData["Search"]" />
        <input type="hidden" name="pageSize" value="@ViewData["PageSize"]" />
        <button type="submit" class="btn btn-primary ms-2">
            <i class="bi bi-search"></i>
        </button>
        <a asp-action="Renters" class="btn btn-secondary ms-2">
            <i class="bi bi-x-lg"></i>
        </a>
    </form>

</div>

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead>
        <tr>
            <th>@T.RenterUserNameText</th>
            <th>@T.RenterEmailText</th>
            <th>@T.RenterPhoneNumberText</th>
            <th>@T.OperationsText</th>
        </tr>
        </thead>
        <tbody>
        @if (!Model.Items.Any())
        {
            <tr>
                <td colspan="4">
                    <span class="d-block w-100 text-center">НЯМА НАМЕРЕНИ НАЕМАТЕЛИ</span>
                </td>
            </tr>
        }
        else
        {

            @foreach (var renter in Model.Items)
            {
                <tr>
                    <td>@renter.Name</td>
                    <td>@renter.Email</td>
                    <td>@renter.PhoneNumber</td>
                    <td>
                        <a href="mailto:@renter.Email" data-bs-toggle="tooltip" title="Имейл" class="btn btn-sm btn-icon text-dark">
                            <i class="bi bi-envelope"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center m-3">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Renters" asp-route-page="@(Model.PageIndex - 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-search="@ViewData["Search"]" class="btn btn-outline-primary">@T.PreviousPageText</a>
    }

    <span>@T.CurrentPageText @Model.PageIndex / @Model.TotalPages</span>

    @if (Model.HasNextPage)
    {
        <a asp-action="Renters" asp-route-page="@(Model.PageIndex + 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-search="@ViewData["Search"]" class="btn btn-outline-primary">@T.NextPageText</a>
    }
</div>