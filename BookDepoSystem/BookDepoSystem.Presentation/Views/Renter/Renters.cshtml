@*@model IEnumerable<BookDepoSystem.Data.Models.Book>*@
@model PaginationViewModel<BookDepoSystem.Data.Models.Renter>
@*@model BookDepoSystem.Presentation.Models.PaginationViewModel<BookDepoSystem.Data.Models.Book>*@

@{
    ViewData["Title"] = "Renters List";
}

<h2 class="m-3">@T.RenterTableTitle</h2>

<div class="d-flex justify-content-between align-items-center m-3">
    <div>
        <a asp-action="Create" class="btn btn-primary">@T.AddNewRenterButtonText</a>
    </div>
    
    <form method="get" class="d-flex align-items-center">
        <input type="text" name="search" class="form-control" placeholder="Search" value="@ViewData["Search"]" />
        <input type="hidden" name="pageSize" value="@ViewData["PageSize"]" />
        <button type="submit" class="btn btn-primary ms-2">Search</button>
        <a asp-action="Renters" class="btn btn-secondary ms-2">Clear</a>
    </form>

</div>

<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>@T.RenterNameText</th>
            <th>@T.RenterEmailText</th>
            <th>@T.RenterPhoneNumberText</th>
            <th>@T.OperationsText</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Items.Any())
        {
            <tr>
                <td colspan="4">
                    <span class="d-block w-100 text-center">NO RENTERS FOUND</span>
                </td>
            </tr>
        }
        else
        {

            @foreach (var renter in Model.Items)
            {
                <tr>
                    <td>@renter.Name</td>
                    <td>@renter.Email</td>
                    <td>@renter.PhoneNumber</td>

                    @*<td>
                            <a asp-action="Edit" asp-route-id="@book.BookId" asp-route-search="@ViewData["Search"]" asp-route-pageSize="@ViewData["PageSize"]" class="btn btn-warning mb-2">@T.EditBookButtonText</a>
                            <a asp-action="Delete" asp-route-id="@book.BookId" asp-route-search="@ViewData["Search"]" asp-route-pageSize="@ViewData["PageSize"]" class="btn btn-danger">@T.DeleteBookButtonText</a>
                        </td>*@
                </tr>
            }
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center m-3">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Renters" asp-route-page="@(Model.PageIndex - 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-search="@ViewData["Search"]" class="btn btn-outline-primary">@T.PreviousPageText</a>
    }

    <span>@T.CurrentPageText @Model.PageIndex / @Model.TotalPages</span>

    @if (Model.HasNextPage)
    {
        <a asp-action="Renters" asp-route-page="@(Model.PageIndex + 1)" asp-route-pageSize="@ViewData["PageSize"]" asp-route-search="@ViewData["Search"]" class="btn btn-outline-primary">@T.NextPageText</a>
    }
</div>